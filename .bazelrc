# Optimizations used for TF Serving release builds.
build:release --copt=-mavx
build:release --copt=-msse4.2

# Options used to build with CUDA.
build:cuda --crosstool_top=@local_config_cuda//crosstool:toolchain
build:cuda --define=using_cuda=true --define=using_cuda_nvcc=true

# Please note that MKL on MacOS or windows is still not supported.
# If you would like to use a local MKL instead of downloading, please set the
# environment variable "TF_MKL_ROOT" every time before build.
build:mkl --define=build_with_mkl=true --define=enable_mkl=true
build:mkl --define=tensorflow_mkldnn_contraction_kernel=0

# This config option is used to enable MKL-DNN open source library only,
# without depending on MKL binary version.
build:mkl_open_source_only --define=build_with_mkl_dnn_only=true
build:mkl_open_source_only --define=build_with_mkl=true --define=enable_mkl=true
build:mkl_open_source_only --define=tensorflow_mkldnn_contraction_kernel=0

# Processor native optimizations (depends on build host capabilities).
build:nativeopt --copt=-march=native
build:nativeopt --host_copt=-march=native
build:nativeopt --copt=-O3

build --action_env PYTHON_BIN_PATH="/usr/bin/python"
build --define PYTHON_BIN_PATH=/usr/bin/python

build --spawn_strategy=standalone
build --genrule_strategy=standalone

build --define=grpc_no_ares=true

# Sets the default Apple platform to macOS.
build --apple_platform_type=macos

build -c opt

# Adding --cxxopt=-D_GLIBCXX_USE_CXX11_ABI=0" creates parity with TF
# compilation options. It also addresses memory use due to
# copy-on-write semantics of std::strings of the older ABI.
build --cxxopt=-D_GLIBCXX_USE_CXX11_ABI=0

build --workspace_status_command=/proc/self/cwd/tools/gen_status_stamp.sh

### ARM cross-compile additions ###

build --host_crosstool_top=@bazel_tools//tools/cpp:toolchain
build --copt=-funsafe-math-optimizations
build --copt=-ftree-vectorize
build --copt=-DARM_NON_MOBILE
build --copt=-DRASPBERRY_PI
build --linkopt=-Wl,--build-id=md5
build --linkopt=-Wl,--hash-style=gnu

# Options for armv8-a
build:arm64v8 --crosstool_top=//tools/cpp/arm:toolchain
build:arm64v8 --cpu=aarch64
build:arm64v8 --copt=-march=armv8-a+crc
build:arm64v8 --define LIBEVENT_TARGET_HOST=aarch64-linux-gnu
build:arm64v8 --define LIBEVENT_MARCH=-march=armv8-a+crc

# Options for armv7-a
build:arm32v7 --crosstool_top=@local_config_arm_compiler//:toolchain
build:arm32v7 --cpu=armeabi
build:arm32v7 --copt=-march=armv7-a
build:arm32v7 --define tensorflow_mkldnn_contraction_kernel=0
build:arm32v7 --define LIBEVENT_TARGET_HOST=arm-linux-gnueabihf
build:arm32v7 --define LIBEVENT_MARCH=-march=armv7-a
